import{s as o}from"./store.85ef397c.js";let s={};o.subscribe(r=>{s=r});let n=s;function m(r,a){let e={...s};e[a]=r;const{mode:d,temp:h,fan:p,highPower:g,tenDegreeMode:f,power:i}=e,t={temp:!1,fan:!1,mode:!1,highPower:!1,tenDegreeMode:!1,power:!1};if((e.mode===3||e.highPower||e.tenDegreeMode)&&(e.fan=0,t.fan=!0),e.highPower&&e.tenDegreeMode)throw new Error("High Power and Ten Degree Mode cannot be enabled at the same time.");switch((e.highPower||e.tenDegreeMode)&&(e.temp=void 0,t.temp=!0,t.fan=!0,t.mode=!0,e.highPower?t.tenDegreeMode=!0:t.highPower=!0),(a=="highPower"&&e.highPower==!1||a=="tenDegreeMode"&&e.tenDegreeMode==!1)&&(e.temp=[1,2].includes(parseInt(e.mode))?20:0),i||(t.temp=!0,t.fan=!0,t.mode=!0,t.highPower=!0,t.tenDegreeMode=!0),a==="mode"&&([1,2].includes(parseInt(r))&&![1,2].includes(parseInt(n.mode))?e.temp=20:[0,3].includes(parseInt(r))&&![0,3].includes(parseInt(n.mode))&&(e.temp=0)),e.mode){case 0:e.temp=Math.min(Math.max(parseInt(e.temp),-2),2);break;case 3:e.temp=Math.min(Math.max(parseInt(e.temp),-2),2);break;case 1:e.temp=Math.min(Math.max(parseInt(e.temp),18),32);break;case 2:e.temp=Math.min(Math.max(parseInt(e.temp),18),32);break;default:e.temp=void 0;break}return n={...e,disabledSettings:t},{...e,disabledSettings:t}}const u=(r,a)=>{console.log("Update ",r,a);try{const e=m(a,r);o.set(e)}catch(e){console.error("Invalid setting update:",e.message)}};export{u};
